MAIN ::= STMT
MAIN ::= FLIST 
MAIN ::= ''

FLIST ::= FDEF FLIST'
FLIST' ::= FLIST 
FLIST' ::= ''

FDEF ::= def id ( PARLIST ) { STMTLIST }

PARLIST ::= int id PARLIST'
PARLIST' ::= , int id PARLIST' 
PARLIST ::= ''
PARLIST' ::= ''

VARLIST ::= id VARLIST'
VARLIST' ::= , VARLIST 
VARLIST' ::= ''

STMT ::= int VARLIST ;
STMT ::= ATRIBST ;
STMT ::= PRINTST ;
STMT ::= RETURNST ;
STMT ::= IFSTMT ;
STMT ::= { STMTLIST } ;
STMT ::= ; 

ATRIBST ::= id := ATREXPR
ATREXPR ::= EXPR 
ATREXPR ::= FCALL

FCALL ::= idf ( PARLISTCALL' ) 

PARLISTCALL ::= id PARLISTCALL'
PARLISTCALL :: ''
PARLISTCALL' ::= , PARLISTCALL 
PARLISTCALL' ::= ''

PRINTST ::= print EXPR

RETURNST ::= return RETURNEXPR
RETURNEXPR ::= id
RETURNEXPR ::= ''

IFSTMT ::= if ( EXPR ) STMT IFSTMT'
IFSTMT' ::= else STMT 
IFSTMT' ::= ''

STMTLIST ::= STMT STMTLIST'
STMTLIST' ::= STMT STMTLIST' 
STMTLIST' ::= ''

EXPR ::= NUMEXPR EXPR'
EXPR' ::= < NUMEXPR
EXPR' ::= <= NUMEXPR
EXPR' ::= > NUMEXPR
EXPR' ::= >= NUMEXPR
EXPR' ::= == NUMEXPR
EXPR' ::= <> NUMEXPR
EXPR' ::= ''

NUMEXPR ::= TERM NUMEXPR'
NUMEXPR' ::= + TERM NUMEXPR'
NUMEXPR' ::= - TERM NUMEXPR'
NUMEXPR' ::= ''

TERM ::= FACTOR TERM'
TERM' ::= * FACTOR TERM'
TERM' ::= / FACTOR TERM'
TERM' ::= ''

FACTOR ::= num 
FACTOR ::= ( NUMEXPR ) 
FACTOR ::= id
